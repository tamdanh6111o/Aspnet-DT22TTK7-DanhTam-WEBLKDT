@model WebsiteLaptopphukien.Models.MStockInOut

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@Html.Partial("_MessageAlert")

@using (Html.BeginForm("Create", "StockInOut", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">@ViewBag.Title</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save"></i>&nbsp; Save
                                </button>
                                <button type="button" class="btn btn-danger btn-sm">
                                    <a href="~/Admin/StockInOut" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-9">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.Label("Loại Phiếu", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="">
                                        @Html.DropDownListFor(model => model.Type, new[] {
                                            new SelectListItem { Value = "IN", Text = "Phiếu Nhập", Selected = true }
                                            , new SelectListItem { Value = "OUT", Text = "Phiếu Xuất" }
                                        }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Số Phiếu ", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "Số Phiếu" } })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Ngày Lập ", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="">
                                        @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Ngày lập", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Ghi Chú ", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", placeholder = "Ghi chú" } })
                                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                
                                <div class="form-group">
                                    @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-12" })
                                    <div class="">
                                        @Html.DropDownListFor(model => model.Status, new[] { new SelectListItem { Value = "1", Text = "Hoạt động" }, new SelectListItem { Value = "2", Text = "Chưa hoạt động" } }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <table id="details" class="table table-borderless table-sm mb-0 pb-0">
                                    <thead>
                                        <tr>
                                            <th>Tên sản phẩm</th>
                                            <th>Số lượng</th>
                                            <th>
                                                <button id="btnAddDetailRow" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)">
                                                    Thêm
                                                </button>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.MStockInOutDetails.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DropDownListFor(x => x.MStockInOutDetails[i].ProductID, (SelectList)ViewBag.Products, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.MStockInOutDetails[i].ProductID, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(x => x.MStockInOutDetails[i].Quantity, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.MStockInOutDetails[i].Quantity, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    <button id="btnRemove-@i" type="button" class="btn btn-sm btn-danger visible" onclick="DeleteItem(this)">
                                                        Xoá
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section Scripts {
    <script>
        function AddItem(btn) {
            var table;
            table = document.getElementById("details");
            var rows = table.getElementsByTagName("tr");
            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastRowIdx = rows.length - 2;

            var nextRowIdx = eval(lastRowIdx) + 1;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastRowIdx + "_", "_" + nextRowIdx + "_");
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastRowIdx + "]", "[" + nextRowIdx + "]");
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastRowIdx, "-" + nextRowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var x = document.getElementsByTagName("input");

            for (var cnt = 0; cnt < x.length; cnt++) {
                if (x[cnt].type == "text" && x[cnt].id.indexOf("_" + nextRowIdx + "_") > 0)
                    x[cnt].value = '';
                else if (x[cnt].type == "number" && x[cnt].id.indexOf("_" + nextRowIdx + "_") > 0)
                    x[cnt].value = 0;
            }

            rebindValidators();
        }

        function DeleteItem(btn) {
            var table = document.getElementById("details");
            var rows = table.getElementsByTagName("tr");
            if (rows.length == 2) {
                alert("This row can't be delete");
                return;
            }
            $(btn).closest('tr').remove();
        }

        function rebindValidators() {
            var $form = $("#form");
            $form.unbind();
            $form.data('validator', null);
            $.validator.unobtrusive.parse($form);
            $form.validate($form.data('unobtrusiveValidation').options);
        }
    </script>
}